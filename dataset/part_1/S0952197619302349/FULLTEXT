10.1016/j.engappai.2019.103262

FULLTEXT

TITLE

fierClass: A multi-signal, cepstrum-based, time series classifier

SECTION

Introduction

PARAGRAPH

In the analysis of dynamical systems, time plays a key role.

In fact, all the related signals evolve over time and any information that has to be inferred from data, ranging from mathematical models, to fault isolation, to systems use mode detection, can be considered as the result of a learning process with time series as predictors.

PARAGRAPH

Modeling from time series has been the objective of system identification for more than 70 years so far, Ljung (1999).

However, in fault or use-mode detection, the learning task can be more properly formulated as a classification problem and such an issue has been less deeply investigated within the control community, due to the categorical nature of the final result which is opposed to a general continuous output of control processes.

Time series classification has been widely studied for problems related to fault detection in dynamic system (Fassois and Sakellariou, 2006; Staszewski et al., 1997), but contributions can be found also in health-monitoring (Kampouraki et al., 2008; Begum et al., 2014) and predictive maintenance (Susto et al., 2014; Pedregal et al., 2004).

These classification algorithms have been used not only in the most traditional engineering fields, but also in more broad sense for anomaly detection, prediction and forecasts problems such as, e.g., economics (Detotto and Otranto, 2012), finance (Heaton et al., 2017), climate monitoring (Zhang et al., 2016).

As the interested range of applications has spiked with the introduction of new technologies that benefit from a digital description, the problem of classifying structured time signals has increased and a large number of innovative time series classification algorithms have been proposed in the data-mining literature in the last years, see, e.g., Bagnall et al. (2017).

PARAGRAPH

As better illustrated in Section 2.1, the research community is constantly seeking for improvements of what currently represents the state of the art, though the performance of some these algorithms are difficult to beat.

For instance, authors of Tran et al. (2019) have recently proposed an innovative approach based on the widely used pair 1-Nearest Neighbor and Dynamic Time Warping algorithms, improving what is already known to outperform most of other time series classification algorithms.

Furthermore, time series classification becomes even more challenging when dealing with multivariate time series.

In fact, as discussed in Wang et al. (2016) and its references, many attribute-value representation methods (i.e., methods that extracts a set of attributes from the data set, reducing the problem dimensionality and/or the length of the time series) are extensively discussed in the literature, though “these approaches may require in-depth domain knowledge for designing, may be labor intensive, and/or time consuming”, as remarked in Kadous and Sammut (2005).

An attempt to solve this problem is proposed by the authors of Wang et al. (2016), in which they combine the benefits of recurrent neural networks (RNN) and adaptive differential evolution (ADE) algorithms, showing promising results, with non negligible shortcomings.

PARAGRAPH

In general, the existing classification methods can be classified in two main classes: model-based and data-driven techniques.

Model-based classification algorithms (see, e.g., Bagnall and Janacek, 2014) aim to fit a dynamical model to each time series and then measure the similarity between the original series and the ones generated by their models.

Such techniques have shown a great potential against over-fitting and allow comparison among signals of different lengths; however, they usually provide worse overall performance with respect to other classification methods, Bagnall et al. (2017).

PARAGRAPH

Data-driven approaches include a large variety of techniques.

In some cases, all the time samples of the series of interest can be taken as predictors (see, e.g., Rath and Manmatha, 2003).

Such a naïve solution is intuitive, but usually also computationally intense (and sometimes unfeasible).

More frequently, a set of features characterizing the time series (e.g., mean, variance, peak values, just to name a few) are used as predictors to which static classifiers are applied.

Even if such approaches are apparently model-free, the choice of the most interesting features to train a classification model is all but straightforward and it usually relies upon some prior knowledge of the system behavior, and in any case introduces a subjective step which at best determines the shape of the final solution, and in the worst can prevents finding a satisfactory answer to the original problem.

PARAGRAPH

In general when dealing with time series data, a frequency-domain analysis is also possible, which allows inferring information on the underlying physical phenomenon by inspecting the frequency ranges on which it acts.

In control systems design, analysis in the frequency domain is a must.

Inspired by this custom habit, in this work we propose a novel frequency-based approach for classification using time series data, leveraging the computation of the cepstrum coefficients, Boets et al. (2005).

We refer to this classifier as fierClass, using the same lexical anagram that links spectrum to cepstrum to connect the terms classifier and fierClass.

The proposed approach combines the flexibility of data-driven classifiers, meaning that the model identification phase is not necessary, with features that capture the underlying dynamics in the frequency-domain.

PARAGRAPH

Although the cepstrum was first defined in the signal processing community as early as in 1963 (Bogert et al., 1963), its use for time series clustering and modeling of dynamical systems has been only recently prompted by B. De Moor and coauthors, see, e.g., the recent (Lauwers and De Moor, 2017).

More specifically, the proposed cepstrum-based classification has several advantages: first of all it allows removing the subjective (and time-consuming) step of feature engineering and selection, offering as native features the cepstrum coefficients themselves, and their distance, properly defined, as similarity measure to guide the classification process.

The analysis of time series in this setting becomes easier and the classification policy straightforward.

Additionally, thanks to this mathematical framework, the choice of the most informative frequency range is simply obtained tuning the hyperparameters.

Further, thanks to the novel extension presented in this work, a cepstrum-based classifier may be shown to handle a vector-valued input, to deal with applications in which many different sensors provide the time series that can be used as inputs in the classification process, one of the most important problems in multivariate time series classification problems.

In fact, we show how the combination of the cepstrum coefficients in the classification problem amounts to the convolution of the original signals in the time domain.

PARAGRAPH

To test the capabilities of the proposed approach within a challenging setting, in this work the multi-signal cepstrum-based classification approach is applied to the problem of automatic detection of phone-usage while driving.

This is a complex classification problem, the relevance of which is motivated by the need of enlarging the current driving-style estimation algorithms adding the important information of the amount of time spent using the phone during a journey.

Of course, this is a major source of danger, and must thus be considered to form a reliable risk-index of a driver.

This is of interest, for example, in the field of insurance telematics, Wahlström et al. (2015) and Li et al. (2016).

PARAGRAPH

To perform such a classification, the time series measured by the smartphone sensors are used, that is three accelerations and three angular velocities.

Based on the resulting time series, the novel approach is tested, and compared to a more classical SVM-based classifier.

To our best knowledge, this is the first work where cepstrum-based signal processing is used for use mode detection via classification.

PARAGRAPH

The paper shows that the cepstrum-based approach yields results which are directly comparable to the best SVM classifier, with the significant advantage of avoiding the qualitative step of feature selection, which is in general highly problem-dependent, and requires a deep knowledge of the problem domain.

Furthermore, such a selection step inevitably adds arbitrariness to the final results, while the proposed cepstrum-based approach is fully automatic and quantitative.

Moreover, the multi-signal approach allows one to automatically select which is the best combination of the available signals to be used for the classification task.

PARAGRAPH

The rest of the paper is organized as follows.

Section 2 discusses the existing panorama in the context of time series classification, to offer a comprehensive contextualization of the present work.

Further, Section 3 presents fierClass, the proposed multi-signal, cepstrum-based classification approach, discussing both training and classification steps.

Then, Section 4 is devoted to a detailed description of the experimental case study considered in this work, that is the automatic classification of phone usage while driving, discussing all the steps leading to the final solution.

SECTION

Preliminaries

PARAGRAPH

In this section, a partial overview on the state-of-the-art algorithms for time series classification is assessed, remarking the results already achieved and the limits of the approaches presented in the literature.

Then, before introducing the proposed method, cepstrum, the mathematical framework used by fierClass, is briefly introduced and some of its properties discussed.

Finally, the main uses of cepstrum are illustrated, familiarizing with one tool used in the proposed classification algorithm.

SECTION

Related work

PARAGRAPH

The problem of classifying time series has been significantly tackled in the past decade, as it was still considered one of the most challenging open tasks in 2006, Yang and Wu (2006).

It is out of the scope of this paper to provide an exhaustive survey on all the algorithms presented in the literature (for further details, please refer to Bagnall et al., 2017; Fawaz et al., 2019).

However, it is worth to mention that few main algorithms have proved to be the state of the art for the considered problem:

PARAGRAPH

At this point, the reader might wonder whether there is actually the need of an additional method for classifying time series and the advantages of the proposed approach with respect to the state of the art:

PARAGRAPH

In this context, our method attempts to empty this gap.

By exploiting the properties of cepstrum, fierClass classifies multivariate time series, requiring a lower computational effort than most of the aforementioned methods.

Besides, its direct connection to the spectrum makes the output easily interpretable and provides insights about the involved dynamics.

SECTION

What is cepstrum?

PARAGRAPH

Cepstrum was first introduced in Bogert et al. (1963) as “the power spectrum of the logarithm of the power spectrum”, coining this new word by reversing the first syllable of spectrum (Childers et al., 1977).

It was initially proposed as a better alternative to the autocorrelation function, especially in presence of echo delays (e.g., echoes in seismological data).

Later, the original definition of cepstrum was reformulated as power cepstrum, making a distinction with the complex one, differently computed.1

PARAGRAPH

Given a stationary stochastic process s(k) and its spectrum Φs, the power cepstrum is defined as the inverse Fourier transform of the logarithm computed on the spectrum Φs (De Cock, 2002), as cs(k)=F−1logΦs=12π∫02πlogΦseiθeikθdθ.

PARAGRAPH

Alternatively, as illustrated in De Cock (2002), the cepstrum could also be obtained given the representation of the stochastic process through a stable and minimum phase autoregressive moving average (ARMA) model.

Indeed, given an ARMA(p,q) with poles (α1,…,αp) and zeros (β1,…,βq) fed with a white noise with variance σ2, its power cepstrum is cs(k)=logσ2k=0∑i=1pαi|k||k|−∑i=1qβi|k||k|k≠0.

PARAGRAPH

A main property of the cepstrum is to be a homomorphic system (see, for instance, De Cock, 2002; Randall, 2017).

The concept of homomorphic systems was introduced by Oppenheim (1965), who demonstrated these systems are the ones in which nonlinear relationships could be converted into linear in their transform domains.

PARAGRAPH

This result can be easily explained with an example.

Suppose to compute the cepstrum of a stationary stochastic process o(k) obtained by the convolution of two given stationary stochastic processes s1(k),s2(k).

This can be expressed as o(k)=s1(k)∗s2(k)=∑j=−∞+∞s1(k−j)s2(j).Due to the convolution, the spectrum Φo is formulated as the product of the two stochastic processes’ spectra Φs1 and Φs2 Φo=Φs1⋅Φs2.By applying the logarithm, (4) can be rewritten as logΦo=logΦs1⋅Φs2=logΦs1+logΦs2.The cepstrum coefficients of o(k) are obtained by taking the inverse Fourier transform of logΦo, meaning co(k)=F−1logΦo=F−1logΦs1⋅Φs2=F−1logΦs1+logΦs2=F−1logΦs1+F−1logΦs2=cs1(k)+cs2(k).This property proves that the cepstrum computed on the convoluted signal is exactly as the sum of the coefficients computed on each signal separately.

Thanks to this homomorphic property, cepstrum has been used in many applications in which it is paramount to separate the source (i.e., an input signal) from the transmission path that filters it.

SECTION

What is cepstrum used for?

PARAGRAPH

In the literature, the cepstral analysis has already been employed to solve problems in mechanics (Randall, 2017), identification (Antoni et al., 2000; Hanson et al., 2007), acoustics (Lee and Ho, 2000; Sukhostat and Imamverdiyev, 2015), recognition and classification in bioengineering (Sengupta et al., 2016; Kang et al., 1995; Bahoura and Pelletier, 2004) and music (Eronen and Klapuri, 2000; Lee et al., 2009), thanks to its high capabilities to discriminate similar patterns.

PARAGRAPH

Cepstrum coefficients have been also used for time series clustering (Lauwers and De Moor, 2017), the unsupervised process to group together time series based on their dynamics, by analyzing the coefficients of different instances.

Numerous cepstrum-based metric have been proposed to solve this problem (Lauwers and De Moor, 2017; Boets et al., 2005).

However, the most used is the so-called Martin distance (Martin, 2000).

Given two time series generated by two different ARMA models M1,M2, the Martin distance is defined as d(M1,M2)=∑k=0∞k|cM1(k)−cM2(k)|2,in which cM1,cM2 are respectively the cepstrum coefficients associated to the output of the models M1 and M2, while k is the cepstrum order.

This metric has become widely popular because it is easy to calculate and reduces the computational effort with respect to other ones (Lauwers and De Moor, 2017).

SECTION

Classification algorithm

PARAGRAPH

fierClass is a multi-signal and multi-class classification algorithm.

Its goal is to classify a stream of signals by means of the cepstrum, comparing the coefficients with the ones learned from a training data set.

At the best of the authors’ knowledge, it is the first time that cepstrum is used to classify multivariate time series.

PARAGRAPH

Thanks to the homomorphic property of cepstrum, in the proposed contribution the classification is obtained monitoring all the recorded signals at the same time, automatically extracting the informative content out of the global stream of data.

With fierClass, there is no need to design any set of handcrafted features, which could be time-consuming and could potentially bias the learning process, nor to go through the computationally heavy process of the state-of-the-art algorithms.

PARAGRAPH

To explain the steps needed to make this possible, in this section the classification algorithm is illustrated in both its training and classification phases.

SECTION

Training

PARAGRAPH

Goal of the training phase is to create a database of known dynamics that are used for comparison during the classification.

The algorithm is supposed to be trained with a data set D of Nt input–output tuples D={{yi,xi},i=1,…,Nt},in which xi and yi are the ith input matrix and output scalar, respectively.

Each matrix xi∈Rn×T (with i=1,…,Nt) is termed instance and is composed of n time series (also called input signals) of length T, as in xi=xi,1⋮xi,n,in which xi,j∈R1×T, with j=1,…,n.

Instead, yi∈Z, with i=1,…,Nt, is a numeric flag indicating the mode (or class) that the training example belong.

The number of tuples Nt, as well as the dimension of their elements, can be freely chosen, but they cannot be changed once the algorithm is trained for a given application.

No restrictions are enforced on the number of modes nor on the number of inputs for each mode.

Furthermore, all the time series are assumed to be sampled at the same sample time Ts.

PARAGRAPH

To capture the dynamics of training instances, their cepstrum coefficients are computed.

To this end, given a generic xi, the spectrum related to its n time series is first computed and regularized on a sliding window w (w≤T), expressed in seconds as α=wTs.

The first step is obtained by means of the Fast Fourier Transform (FFT) Φxi,j(t)=1w|Xi,j|2,in which Xi,j is the periodogram estimate computed with the FFT.

Then, the regularized spectrum Φ̄xi,j is computed averaging the T−w spectra evaluated slicing a given time series xi,j Φ̄xi,j=1T−w∑t=wTΦxi,j(t),in which Φxi,j(t) is the spectrum of the time series computed on the portion of signal xi,j(t−w+1,…,t).

The size of the sliding window w is a tuning parameter of the algorithm and also defines the dimension of the data buffer needed in the classification phase.

Further details on how to calibrate this parameter are provided later on.

PARAGRAPH

Cepstrum coefficients cxi,j of xi,j are then evaluated according to the definition as the Inverse Fast Fourier Transform (IFFT) of the logarithm of the regularized spectrum Φ̄xi,j cxi,j=IFFTlogΦ̄xi,j,with cxi,j∈R1×w.

PARAGRAPH

These operations are repeated for all the signals of all the training instances forming the training database C C={{yi,ci},i=1,…,Nt},in which ci∈Rn×w is the matrix containing the learned cepstrum cxi,j (with j=1,…,n) of the Nt instances.

A sketch of the training algorithm is described in Algorithm 1.

PARAGRAPH

Since the focus of the proposed approach is also to provide a more computationally efficient algorithm, an evaluation of the computational burden is discussed.

Computationally, FFT and IFFT are ONlogN (with N the number of samples — in this case N=w).

Thus, the proposed learning algorithm has a complexity of O=nNt(T−w+1)wlogw.The computational burden of the training phase is not negligible, but it is only a linear function of the number of instances (Nt), the number of time series provided (n), their duration (T−w+1), and the computing cost of the FFT/IFFT (wlogw).

SECTION

Classification

PARAGRAPH

Once the learning phase is completed, fierClass can be employed for classifying a stream of data s∈Rn×w, s(t)=s1(t)⋮sn(t),with the same number of time series n and window size w of the learning phase.

To predict the output class, at time instant t, the cepstrum coefficients of signal sj (with j=1,…,n) are computed as in csj(t)=IFFTlogΦsj(t),in which Φsj(t) is the spectrum computed on the last w buffered samples of signal sj – or sj(t−w+1,…,t) – as shown in the example in Fig. 1.

PARAGRAPH

The computed cepstrum is then compared with that of all the instances ci, with i=1,…,Nt, learned by means of a modified version of (7) d(ci,s)=∑k=0Ncepk|r(k)|2=∑k=0Ncepk|∑j=1ncxi,j(k)−csj(k)|2.The distance in (17) differs from the original in (7) for two main characteristics:

PARAGRAPH

Based on the computed distances, the predicted class Ŷ is the one minimizing the distance in (17): Ŷ=argminci∈Cd(ci,s).

PARAGRAPH

The classification phase of the algorithm is sketched in Algorithm 2 and summarized in the flowchart in Fig. 2.

In this case, at each new sample, the computational complexity is O=nwlog(w).

Assuming to use fierClass for classifying a set of time series of length Tvalidation (instead of a continuous stream of data), the overall computational complexity becomes O=n(Tvalidation−w+1)wlog(w).

PARAGRAPH

PARAGRAPH

PARAGRAPH

Finally, a remark on the tuning parameters is addressed aiming to provide useful guidelines for the manual tuning of the algorithm (Table 1).

The rule of thumb for the algorithm calibration can be summarized as follows:

the size of the window w affects the spectrum representation.

In fact for large values of w, the spectral representation is fine, but due to the significant amount of past data stored, transient duration increases; on the contrary, short windows provide a prompter reaction when the class changes, but the spectrum is described with fewer points, which affect the information accuracy in the frequency domain;

the value of Ncep represents the maximum cepstrum order that is accounted in the modified Martin distance.

Theoretically, this value should be infinity to perfectly characterize the system dynamics.

However, as widely known for the autocovariance function, high-order cepstrum coefficients are poorly estimated due to the limited amount of data available for large temporal lags.

Thus, the modified Martin distance is truncated at the Ncep-th order, reducing the effect of the noise affecting the estimated coefficients on the classification process.

PARAGRAPH

According to these guidelines, in the application example we proceeded as follows: given an initial guess for Ncepin, the window α is tuned trading-off system responsiveness and buffer size, trying to obtain a reactive classification and stable output at steady state.

Once the window is set to its optimal value αo, a fine tuning of Ncep is performed, leading to the performance maximization value of Ncepo.

As illustrated in Figs. 11 and 12, classification performance shows a significant trend for different values of w, which reaches its peak for αo=2 s. Instead, given a certain value of α, performance settle once the optimal frequency window is found (in our application Ncep≥4, in which the peak is reached for Ncepo=5).

PARAGRAPH

It is also worth to remark that Ncep does not show any significant trend when the number of input signals is sufficiently large (in the proposed example, when at least five inputs are used).

In fact, when only few signals are involved, the effect of noise on the performance is significant for different values of Ncep (up to 20 percentage points in terms of accuracy), making the overall calibration process more sensitive to the parameters tuning, increasing the required human effort and vanishing some of the benefits of the proposed approach.

SECTION

PARAGRAPH

Experimental results

PARAGRAPH

To validate the proposed approach, fierClass is tested in order to detect whether a driver is using the phone while driving based only on the sensed motion, a classification problem already analyzed in a previous work of the authors (Gelmini et al., 2018).

The algorithm is automatically activated and deactivated when the driver is inside the vehicle, thanks to a Bluetooth beacon placed under the steering wheel (as shown in Fig. 3).

Movements are sensed through the smartphone’s tri-axial inertial measurement unit (IMU) measuring both the accelerations and the angular rate (thus, n=6); signals are recorded at the sampling frequency of 120Hz.

The classification process is run at the same frequency, obtaining one predicted output at each new sample.

PARAGRAPH

The smartphone is considered in-use when the driver performs one of the most common activities (e.g., handling, texting, scrolling, browsing, calling etc.) and not in-use otherwise, as illustrated in Fig. 4.

fierClass is trained and tested against data collected during an experimental campaign in the Milan area, driving the vehicle in both a mixed urban and high-way environment.

SECTION

Validation

PARAGRAPH

In this Subsection, a sensitivity analysis of the algorithm performance with respect to the tuning parameters w and Ncep is addressed.

Besides, to validate the effectiveness of the proposed approach, the analysis is conducted for all the possible signals combinations, leading to more than 2500 tests.

PARAGRAPH

First of all, the classification behavior is analyzed computing the accuracy for all the possible combinations of acceleration and angular rate components2  (Fig. 5), ordering the obtained results based on their mean value, highlighting the maximum and minimum values not considered outliers.

As shown, a trend is evident:

PARAGRAPH

PARAGRAPH

To better analyze these results, starting from the most performing classifier trained with a single signal (ay), an evolving combination of signals that improve the overall classification accuracy is found, as shown in Fig. 6.

In this case, the benefits of the convolution with more signals proposed in fierClass become evident: the average accuracy increases, especially for more than four input signals; the maximum and minimum values increases, improving the performance in both the best and worst case scenario; consequently, the ranges shrink, making the algorithm less sensitive to its tuning.

PARAGRAPH

Accuracy is an important performance index, but it is not sufficient to describe the classification behavior entirely.

For this reason, fierClass is also analyzed in terms of sensitivity and specificity, through a scatter version of the Receiver Operating Characteristic (ROC).

The goal of this visualization is to jointly analyze the true positive rate and the false positive rate, showing how quickly the number of false positives (i.e., in this application a false positive is obtained when the algorithm predicts the class Using, though the phone is actually not in use) grows for an increasing number of correct claims (Witten et al., 2016).

As illustrated in Fig. 7, for an increasing number of signals, the classification qualitatively improves, according to the location of the main clusters.

The variability remarks the drawbacks of an improper calibration.

PARAGRAPH

To quantify the variability of the different ROC curves, the so-called Area Under Curve (AUC), which is the area below the ROC (Fawcett, 2006), is employed.

In Fig. 8, the AUC is computed, limiting the analysis to the only combination of input signals analyzed in Fig. 6.

As already discussed, up to three inputs, the performance of the classifiers are very sensitive to the tuning parameters; contrarily, for four signals or more, the algorithm outperforms and then settles in a narrow range of its best.

Once more, fierClass benefits combining more signals together.

PARAGRAPH

The analysis of accuracy and AUC might be misleading when the size of the validation classes is unbalanced (Powers, 2011).

Since tests were conducted reproducing a realistic driving experience, Fig. 9 shows that there is a mismatch between the classes Using and Not using.

For this reason, two more performing indexes are analyzed: F1-score, obtained as harmonic average of precision and recall (Witten et al., 2016), and the Cohen’s Kappa, which compares the observed accuracy with the expected one (Ben-David, 2008).

As shown in both Figs. 10 and 11, the performance of the classifier improves significantly when more inputs are used (more than three, also from this analysis).

Although the classes are unbalanced, the two indexes confirm what previously state about the overall classification performance.

PARAGRAPH

To conclude the analysis, the influence of each tuning parameter on the classification performance is addressed.

The cepstrum order, Ncep, does not heavily influence the classification outcome when all the input signals are used, as shown in Fig. 12.

However, reducing the number of signals, fierClass becomes more sensitive to the cepstrum order, showing a peak at Ncep=4.

When less information is available, the classifier tends to overfit more and be more influenced to the noise corrupting the estimate of higher order cepstrum coefficients.

PARAGRAPH

The sliding window’s dimension also influences the final outcome (Fig. 13): for a short window (α<2 s), the algorithm has a worse representation of low-frequency components, while for longer windows (α≥5 s) the buffer takes more time to empty, influencing the classification for several seconds after a transition.

This trend is even more stressed when the number of signals grows, since the information combined from sources with different dynamics is either partially captured or the promptness compromised.

PARAGRAPH

Given these analysis, it is possible to state that the optimal performance is achieved for αo=2s and Ncepo=5.

SECTION

Testing

PARAGRAPH

After learning the algorithm hyperparameters, the algorithm is tested against a new set of data.

The testing datasets are composed of two new test drives of 5 min each, which are collected for testing and are not used in the validation phase.

Table 2 reports the results of the analyzed indexes (i.e., accuracy, area under curve, F1-score and Cohen’s Kappa) for the most performing classifier and, using the same tuning, for the two tests separately and their average results.

PARAGRAPH

Notably, the performance obtained in the testing phase align with those obtained in validation.

In this case, as illustrated, the performance computed on the test set showed to lose two percentage points in terms of accuracy and three in the area under curve.

The mismatch is more noticeable for the F1-score and Cohen’s Kappa, but the obtained performance can still be considered acceptable.

SECTION

Concluding remarks

PARAGRAPH

This work presented a novel frequency-based classification approach for time series which can handle a multisignal input, as in practice is the case of measurements coming from different sensors.

Specifically, our proposal leverages the computation of the cepstrum coefficients of each input signal, combining them in the frequency domain in a way that corresponds to signal convolution in the time domain.

This operation merges the information content of the different inputs while reducing the input dimension.

The classification is then computed in the cepstrum domain, convolving a multivariate stream of data and comparing it with respect to the previously learned instances.

PARAGRAPH

The proposed approach, which yields the distinctive advantage of removing the subjective feature engineering step inherent in many time-based classification methods, proved to offer very good performance when tested in an experimental setting of classifying whether a car driver is using the phone while driving.

On the current setting, the proposed approach can yield very robust and effective responses.

The favorable results were obtained with significantly less computational effort than current state of the art algorithms, making the proposed approach feasible for its use on devices with limited resources (e.g., in our case, a smartphone).

Besides, the proposed approach makes the analysis of the output easily accessible and interpretable.

PARAGRAPH

Unfortunately, the benefits of this approach come with some limitations: the algorithm is calibrated over two hyperparameters, which have proved to significantly emphasize the information content in the frequency domain when properly tuned, but they require some manual calibration; besides, in further developments the problem of managing measurements collected with different level of accuracy and reliability, a problem of extreme importance in many applications and not yet solved by the time series classification research community, will be tackled.